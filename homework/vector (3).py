def find_vector(v1: list, v2: list):
    '''
    Функция на ввод принимает два вектора: v1, v2
        и находит координаты вектора, построенного на концах данных
    Возврат: список
    '''
    v1v2 = list(map(lambda v1, v2: v2 - v1, v1, v2))
    return v1v2
#1.	Заданы два вектора. Найти расстояние между концами этих векторов

def vector(v1: list, v2: list):
    '''
    Функция принимает в качестве аргументов два вектора(списки из числами): v1, v2
    Находит раастояние между их концами
    Возврат: число
    '''
    v1v2 = find_vector(v1, v2)
    summ = 0
    for el in v1v2:
        summ += el ** 2
    return summ ** 0.5


#2.	Заданы два вектора. Найти диагональ параллелограмма (вектор), построенного на заданных векторах. Длину вектора и координаты конца.
v1 = [2, 4, 9]
v2 = [3, 1, 5]

def work_w_vect(v1: list, v2: list):
    '''
    Функция принимает 2 аргумента:
        v1 - Вектор, откуда исходит вектор диагонали
        v2 - Вектор, куда вектор диагонали направлен
    функция находит:
        1. Координаты вектора диагонали
        2. Длину вектора диагонали
        3. Координаты конца вектора диагонали
    Возврат: список из чисел, число, список
    '''
    summ = 0
    #find vector
    vector = find_vector(v1, v2)
    #find width of vector
    for el in vector:
        summ += el ** 2
    return vector, summ**0.5, v2



if __name__ == '__main__':
    v1 = [2, 4, 9]
    v2 = [3, 1, 5]
    print(vector(v1, v2))
    print(work_w_vect(v1, v2)) 