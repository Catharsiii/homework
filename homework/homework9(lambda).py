i1 = [12, 3, 22, 3]
i2 = [30,3, 6, 29, 8]
def tuple_s (elem1,elem2, *args):
    ''' 
    функция на входе получает два списка и составляет из них список,
    элементами которого являются начальные два списка
    '''
    return [elem1,elem2, *args]

#1.	Дан список из строк. Вывести из списка только те элементы, которые содержат символ «в» 
spis = ['ва', 'elввd', 'd,f', 'fввв', 'fн']
stroka = lambda x: [print (x) for x in spis if "в" in x]


#2.	Дан список из строк. Вывести список, состоящий из символов в верхнем регистре
spis = ['sA', 'Gener', 'd,sj' , 'Dokf', 'fн']
stroka = lambda x: [i for x in spis for i in x if i.isupper()]


#print (tuple_s(i1,i2))	
#3.	Даны два списка чисел. Получить список, состоящий из суммы квадратов соответствующих элементов исходных списков
sum_spis = list(map(tuple_s, i1,i2))
itog = map(lambda x: x[0] ** 2 + x[1] ** 2, sum_spis)


#4.	Даны 3 списка чисел. Вывести список, который содержит периметр треугольника, составленного из соответствующих элементов исходных списков
# в том случае если это возможно, если невозможно, то 0.
spis1 = [2, 21, 3, 9, 8]
spis2 = [1, 11, 3, 12, 5]
spis3 = [6, 12, 3, 1, 5]
sum_spis = list(map(tuple_s, spis1, spis2, spis3))
spis_f = [ sum(i) for i in sum_spis if i[0]+i[1]>i[2] and i[1]+i[2]>i[0] and i[0]+i[2]>i[1]]





if __name__ == '__main__':
    #stroka(spis)
    #print(stroka(spis))
    #print(list(itog))
    print('Периметры получившихся треугольников:', spis_f)